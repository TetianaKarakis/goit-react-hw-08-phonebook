{"version":3,"file":"static/js/933.289b9352.chunk.js","mappings":"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","sources":["modules/LoginForm/initialState.js","modules/LoginForm/fields.js","webpack://react-homework-template/./src/modules/LoginForm/LoginForm.module.css?2400","modules/LoginForm/LoginForm.jsx","pages/LoginPage/LoginPage.jsx","shared/components/Button/Buttons.jsx","webpack://react-homework-template/./src/shared/components/TextField/TextField.module.css?2d5d","shared/components/TextField/TextField.jsx","../node_modules/nanoid/index.browser.js","../node_modules/@mui/icons-material/Login.js"],"sourcesContent":["const initialState = {\n    email: '',\n    password: '',\n};\n\nexport default initialState;","const fields = {\n    email: {\n        type: 'email',\n        name: 'email',\n        required: true,\n        label: 'Email:',\n        placeholder: 'User email',\n    },\n    password: {\n        type: 'password',\n        name: 'password',\n        required: true,\n        label: 'Password:',\n        placeholder: 'User password',\n    },\n};\n\nexport default fields;","// extracted by mini-css-extract-plugin\nexport default {\"title\":\"LoginForm_title__5Xj78\",\"form\":\"LoginForm_form__pVIZl\",\"button\":\"LoginForm_button__+RNey\"};","import * as React from 'react';\nimport { useState } from 'react';\n\nimport { Btn } from 'shared/components/Button/Buttons';\nimport LoginIcon from '@mui/icons-material/Login';\n\nimport TextField from 'shared/components/TextField/TextField';\n\nimport initialState from './initialState';\nimport fields from './fields';\n\nimport css from './LoginForm.module.css';\n\nconst LoginForm = ({ onSubmit }) => {\n    const [state, setState] = useState({ ...initialState });\n\n    const handleSearch = e => {\n        const { name, value } = e.target;\n        setState(prevState => {\n        return { ...prevState, [name]: value };\n        });\n    };\n\n    const handleSubmit = e => {\n        e.preventDefault();\n        onSubmit({ ...state });\n        setState({ ...initialState });\n    };\n    const { email, password } = state;\n\n    return (\n        <>\n        <form onSubmit={handleSubmit} className={css.form}>\n            <TextField\n            value={email}\n            handleChange={handleSearch}\n            {...fields.email}\n            />\n            <TextField\n            value={password}\n            handleChange={handleSearch}\n            {...fields.password}\n            />\n            <Btn type=\"submit\" endIcon={<LoginIcon />}>\n            Login\n            </Btn>\n        </form>\n        </>\n    );\n};\n\nexport default LoginForm;","import { useDispatch } from 'react-redux';\nimport { login } from 'redux/auth/auth-operations';\nimport LoginForm from 'modules/LoginForm/LoginForm';\n\nconst LoginPage = () => {\n    const dispatch = useDispatch();\n\n    const handleLogin = data => {\n        dispatch(login(data));\n    };\n\n    return (\n        <>\n        <LoginForm onSubmit={handleLogin} />\n        </>\n    );\n};\n\nexport default LoginPage;","import { Button } from '@mui/material';\nimport { blue } from '@mui/material/colors';\nimport { styled } from '@mui/material/styles';\n\nconst ColorButton = styled(Button)(({ theme }) => ({\n    color: theme.palette.getContrastText(blue[200]),\n    backgroundColor: blue[200],\n\n    '&:hover': {\n        backgroundColor: blue[300],\n    },\n}));\n\nexport const Btn = ({ children, type = 'submit', endIcon }) => {\n    return (\n        <ColorButton variant=\"contained\" type={type} endIcon={endIcon}>\n        {children}\n        </ColorButton>\n    );\n};","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"TextField_wrapper__OQN5w\",\"label\":\"TextField_label__PQj1k\",\"input\":\"TextField_input__Oi20a\"};","import { useMemo } from 'react';\nimport { nanoid } from 'nanoid';\nimport css from './TextField.module.css';\n\nconst TextField = ({ label, handleChange, ...props }) => {\n    const id = useMemo(() => nanoid(), []);\n\n    return (\n        <div className={css.wrapper}>\n        <label htmlFor={id} className={css.label}>\n            {label}\n        </label>\n        <input id={id} onChange={handleChange} {...props} className={css.input} />\n        </div>\n    );\n};\n\nexport default TextField;","import { urlAlphabet } from './url-alphabet/index.js'\nlet random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nlet customRandom = (alphabet, defaultSize, getRandom) => {\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  let step = -~((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nlet customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size, random)\nlet nanoid = (size = 21) =>\n  crypto.getRandomValues(new Uint8Array(size)).reduce((id, byte) => {\n    byte &= 63\n    if (byte < 36) {\n      id += byte.toString(36)\n    } else if (byte < 62) {\n      id += (byte - 26).toString(36).toUpperCase()\n    } else if (byte > 62) {\n      id += '-'\n    } else {\n      id += '_'\n    }\n    return id\n  }, '')\nexport { nanoid, customAlphabet, customRandom, urlAlphabet, random }\n","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M11 7 9.6 8.4l2.6 2.6H2v2h10.2l-2.6 2.6L11 17l5-5-5-5zm9 12h-8v2h8c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2h-8v2h8v14z\"\n}), 'Login');\nexports.default = _default;"],"names":["email","password","type","name","required","label","placeholder","_ref","onSubmit","_useState","useState","_objectSpread","initialState","_useState2","_slicedToArray","state","setState","handleSearch","e","_e$target","target","value","prevState","_defineProperty","_jsx","_Fragment","children","_jsxs","preventDefault","className","css","TextField","handleChange","fields","Btn","endIcon","LoginIcon","dispatch","useDispatch","LoginForm","data","login","ColorButton","styled","Button","color","theme","palette","getContrastText","blue","backgroundColor","_ref2","_ref2$type","variant","props","_objectWithoutProperties","_excluded","id","useMemo","size","arguments","length","undefined","crypto","getRandomValues","Uint8Array","reduce","byte","toString","toUpperCase","nanoid","htmlFor","onChange","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","_default","default","jsx","d"],"sourceRoot":""}